@import "animate-sass/animate";

// These animations will be included
$use-fadeIn: true;
// If you want to develop and don't need that seizure epilepsia attack
$dev: true !default;

/**
 * Random color madness
 */
@function randomizeColor(){
	$color: (
		octal: (
			red: random(256)-1,
			green: random(256)-1,
			blue: random(256)-1
		),
		percent: (
			red: random(101)-1,
			green: random(101)-1,
			blue: random(101)-1,
			saturation: random(101)-1,
			light: random(101)-1
		),
		deg: (
			hue: random(361)-1
		),
		fraction: (
			alpha: random(100)/100
		)
	);
	@return $color;
}

@function color($base, $component) {
	$color: randomizeColor();
	@return map-get(map-get($color, $base), $component);
}

@function getRandomColor($format: NULL) {
	@if $format == "hex" {
		@return rgb(color(octal, red), color(octal, green), color(octal, blue));
	} @else if $format == "rgb" { 
		@return unquote("rgb(#{color(octal, red)}, #{color(octal, green)}, #{color(octal, blue)})");
	} @else if $format == "%rgb" { 
		@return unquote("rgb(#{color(percent, red)}%, #{color(percent, green)}%, #{color(percent, blue)}%)");
	} @else if $format == "rgba" { 
		@return unquote("rgba(#{color(octal, red)}, #{color(octal, green)}, #{color(octal, blue)}, #{color(fraction, alpha)})");
	} @else if $format == "%rgba" { 
		@return unquote("rgba(#{color(percent, red)}%, #{color(percent, green)}%, #{color(percent, blue)}%, #{color(fraction, alpha)})");
	} @else if $format == "hsl" { 
		@return unquote("hsl(#{color(deg, hue)}, #{color(percent, saturation)}%, #{color(percent, light)}%)");
	} @else if $format == "hsla" { 
		@return unquote("hsla(#{color(deg, hue)}, #{color(percent, saturation)}%, #{color(percent, light)}%, #{color(fraction, alpha)})");
	} @else { 
		@return nth($named-colors, random(147));
	}
}


body {
	background: #FFF;
	overflow-x: hidden;

	font-family: "Comic Sans MS", cursive, sans-serif;
	font-size: 32px;
	font-weight: 900;
	
	animation: pulse 10s infinite;

	@if $dev {
		@keyframes pulse {
			@for $i from 0 through 100 {
				#{$i * 1%} {
					background-color: getRandomColor("rgb");
				}
			}
		}
	}
	

}

.hide {
	display: none;
}

.char {

	width: 400px;
	height: 400px;

	position: absolute;
	bottom: 54px;

	.awesomesauce {
		position: absolute;
		bottom: 0px;
	}

	.eth0 {
		position: absolute;
		bottom: 0px;
		margin: auto 15%;
	}

	.eth1 {
		position: absolute;
		bottom: 0px;
		margin: auto 30%;
	}
	
	.lifeissad {
		position: absolute;
		bottom: 0px;
		margin: auto 35%;
	}
}

.footer {
	height: 64px;
	line-height: 64px;
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	text-align: center;
	
	animation: footerMadness 10s infinite;

	@if $dev {
		@keyframes footerMadness {
			@for $i from 0 through 100 {
				#{$i * 1%} {
					color: getRandomColor("rgb");
					background-color: getRandomColor("rgb");
				}
			}
		}
	}
}